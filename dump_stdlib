
seg_stdlib:     file format elf32-i386


Disassembly of section .init:

080482b8 <_init>:
 80482b8:	55                   	push   %ebp
 80482b9:	89 e5                	mov    %esp,%ebp
 80482bb:	53                   	push   %ebx
 80482bc:	83 ec 04             	sub    $0x4,%esp
 80482bf:	e8 00 00 00 00       	call   80482c4 <_init+0xc>
 80482c4:	5b                   	pop    %ebx
 80482c5:	81 c3 30 1d 00 00    	add    $0x1d30,%ebx
 80482cb:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 80482d1:	85 d2                	test   %edx,%edx
 80482d3:	74 05                	je     80482da <_init+0x22>
 80482d5:	e8 1e 00 00 00       	call   80482f8 <__gmon_start__@plt>
 80482da:	e8 e1 00 00 00       	call   80483c0 <frame_dummy>
 80482df:	e8 ec 01 00 00       	call   80484d0 <__do_global_ctors_aux>
 80482e4:	58                   	pop    %eax
 80482e5:	5b                   	pop    %ebx
 80482e6:	c9                   	leave  
 80482e7:	c3                   	ret    

Disassembly of section .plt:

080482e8 <__gmon_start__@plt-0x10>:
 80482e8:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482ee:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482f4:	00 00                	add    %al,(%eax)
	...

080482f8 <__gmon_start__@plt>:
 80482f8:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80482fe:	68 00 00 00 00       	push   $0x0
 8048303:	e9 e0 ff ff ff       	jmp    80482e8 <_init+0x30>

08048308 <__libc_start_main@plt>:
 8048308:	ff 25 04 a0 04 08    	jmp    *0x804a004
 804830e:	68 08 00 00 00       	push   $0x8
 8048313:	e9 d0 ff ff ff       	jmp    80482e8 <_init+0x30>

08048318 <__stack_chk_fail@plt>:
 8048318:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804831e:	68 10 00 00 00       	push   $0x10
 8048323:	e9 c0 ff ff ff       	jmp    80482e8 <_init+0x30>

Disassembly of section .text:

08048330 <_start>:
 8048330:	31 ed                	xor    %ebp,%ebp
 8048332:	5e                   	pop    %esi
 8048333:	89 e1                	mov    %esp,%ecx
 8048335:	83 e4 f0             	and    $0xfffffff0,%esp
 8048338:	50                   	push   %eax
 8048339:	54                   	push   %esp
 804833a:	52                   	push   %edx
 804833b:	68 60 84 04 08       	push   $0x8048460
 8048340:	68 70 84 04 08       	push   $0x8048470
 8048345:	51                   	push   %ecx
 8048346:	56                   	push   %esi
 8048347:	68 17 84 04 08       	push   $0x8048417
 804834c:	e8 b7 ff ff ff       	call   8048308 <__libc_start_main@plt>
 8048351:	f4                   	hlt    
 8048352:	90                   	nop
 8048353:	90                   	nop
 8048354:	90                   	nop
 8048355:	90                   	nop
 8048356:	90                   	nop
 8048357:	90                   	nop
 8048358:	90                   	nop
 8048359:	90                   	nop
 804835a:	90                   	nop
 804835b:	90                   	nop
 804835c:	90                   	nop
 804835d:	90                   	nop
 804835e:	90                   	nop
 804835f:	90                   	nop

08048360 <__do_global_dtors_aux>:
 8048360:	55                   	push   %ebp
 8048361:	89 e5                	mov    %esp,%ebp
 8048363:	53                   	push   %ebx
 8048364:	83 ec 04             	sub    $0x4,%esp
 8048367:	80 3d 14 a0 04 08 00 	cmpb   $0x0,0x804a014
 804836e:	75 3f                	jne    80483af <__do_global_dtors_aux+0x4f>
 8048370:	a1 18 a0 04 08       	mov    0x804a018,%eax
 8048375:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804837a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048380:	c1 fb 02             	sar    $0x2,%ebx
 8048383:	83 eb 01             	sub    $0x1,%ebx
 8048386:	39 d8                	cmp    %ebx,%eax
 8048388:	73 1e                	jae    80483a8 <__do_global_dtors_aux+0x48>
 804838a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048390:	83 c0 01             	add    $0x1,%eax
 8048393:	a3 18 a0 04 08       	mov    %eax,0x804a018
 8048398:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804839f:	a1 18 a0 04 08       	mov    0x804a018,%eax
 80483a4:	39 d8                	cmp    %ebx,%eax
 80483a6:	72 e8                	jb     8048390 <__do_global_dtors_aux+0x30>
 80483a8:	c6 05 14 a0 04 08 01 	movb   $0x1,0x804a014
 80483af:	83 c4 04             	add    $0x4,%esp
 80483b2:	5b                   	pop    %ebx
 80483b3:	5d                   	pop    %ebp
 80483b4:	c3                   	ret    
 80483b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <frame_dummy>:
 80483c0:	55                   	push   %ebp
 80483c1:	89 e5                	mov    %esp,%ebp
 80483c3:	83 ec 18             	sub    $0x18,%esp
 80483c6:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 80483cb:	85 c0                	test   %eax,%eax
 80483cd:	74 12                	je     80483e1 <frame_dummy+0x21>
 80483cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d4:	85 c0                	test   %eax,%eax
 80483d6:	74 09                	je     80483e1 <frame_dummy+0x21>
 80483d8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483df:	ff d0                	call   *%eax
 80483e1:	c9                   	leave  
 80483e2:	c3                   	ret    
 80483e3:	90                   	nop

080483e4 <do_copy>:
 80483e4:	55                   	push   %ebp
 80483e5:	89 e5                	mov    %esp,%ebp
 80483e7:	83 ec 10             	sub    $0x10,%esp
 80483ea:	8b 45 08             	mov    0x8(%ebp),%eax
 80483ed:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80483f0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483f3:	0f b6 10             	movzbl (%eax),%edx
 80483f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80483f9:	88 10                	mov    %dl,(%eax)
 80483fb:	8b 45 08             	mov    0x8(%ebp),%eax
 80483fe:	0f b6 00             	movzbl (%eax),%eax
 8048401:	84 c0                	test   %al,%al
 8048403:	0f 95 c0             	setne  %al
 8048406:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804840a:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 804840e:	84 c0                	test   %al,%al
 8048410:	75 de                	jne    80483f0 <do_copy+0xc>
 8048412:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048415:	c9                   	leave  
 8048416:	c3                   	ret    

08048417 <main>:
 8048417:	55                   	push   %ebp
 8048418:	89 e5                	mov    %esp,%ebp
 804841a:	83 e4 f0             	and    $0xfffffff0,%esp
 804841d:	83 ec 50             	sub    $0x50,%esp
 8048420:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048426:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 804842a:	31 c0                	xor    %eax,%eax
 804842c:	c7 44 24 14 20 85 04 	movl   $0x8048520,0x14(%esp)
 8048433:	08 
 8048434:	8b 44 24 14          	mov    0x14(%esp),%eax
 8048438:	89 44 24 04          	mov    %eax,0x4(%esp)
 804843c:	8d 44 24 1a          	lea    0x1a(%esp),%eax
 8048440:	89 04 24             	mov    %eax,(%esp)
 8048443:	e8 9c ff ff ff       	call   80483e4 <do_copy>
 8048448:	8b 54 24 4c          	mov    0x4c(%esp),%edx
 804844c:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8048453:	74 05                	je     804845a <main+0x43>
 8048455:	e8 be fe ff ff       	call   8048318 <__stack_chk_fail@plt>
 804845a:	c9                   	leave  
 804845b:	c3                   	ret    
 804845c:	90                   	nop
 804845d:	90                   	nop
 804845e:	90                   	nop
 804845f:	90                   	nop

08048460 <__libc_csu_fini>:
 8048460:	55                   	push   %ebp
 8048461:	89 e5                	mov    %esp,%ebp
 8048463:	5d                   	pop    %ebp
 8048464:	c3                   	ret    
 8048465:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048470 <__libc_csu_init>:
 8048470:	55                   	push   %ebp
 8048471:	89 e5                	mov    %esp,%ebp
 8048473:	57                   	push   %edi
 8048474:	56                   	push   %esi
 8048475:	53                   	push   %ebx
 8048476:	e8 4f 00 00 00       	call   80484ca <__i686.get_pc_thunk.bx>
 804847b:	81 c3 79 1b 00 00    	add    $0x1b79,%ebx
 8048481:	83 ec 1c             	sub    $0x1c,%esp
 8048484:	e8 2f fe ff ff       	call   80482b8 <_init>
 8048489:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804848f:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048495:	29 c7                	sub    %eax,%edi
 8048497:	c1 ff 02             	sar    $0x2,%edi
 804849a:	85 ff                	test   %edi,%edi
 804849c:	74 24                	je     80484c2 <__libc_csu_init+0x52>
 804849e:	31 f6                	xor    %esi,%esi
 80484a0:	8b 45 10             	mov    0x10(%ebp),%eax
 80484a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484a7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80484b1:	89 04 24             	mov    %eax,(%esp)
 80484b4:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80484bb:	83 c6 01             	add    $0x1,%esi
 80484be:	39 fe                	cmp    %edi,%esi
 80484c0:	72 de                	jb     80484a0 <__libc_csu_init+0x30>
 80484c2:	83 c4 1c             	add    $0x1c,%esp
 80484c5:	5b                   	pop    %ebx
 80484c6:	5e                   	pop    %esi
 80484c7:	5f                   	pop    %edi
 80484c8:	5d                   	pop    %ebp
 80484c9:	c3                   	ret    

080484ca <__i686.get_pc_thunk.bx>:
 80484ca:	8b 1c 24             	mov    (%esp),%ebx
 80484cd:	c3                   	ret    
 80484ce:	90                   	nop
 80484cf:	90                   	nop

080484d0 <__do_global_ctors_aux>:
 80484d0:	55                   	push   %ebp
 80484d1:	89 e5                	mov    %esp,%ebp
 80484d3:	53                   	push   %ebx
 80484d4:	83 ec 04             	sub    $0x4,%esp
 80484d7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80484dc:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484df:	74 13                	je     80484f4 <__do_global_ctors_aux+0x24>
 80484e1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80484e6:	66 90                	xchg   %ax,%ax
 80484e8:	83 eb 04             	sub    $0x4,%ebx
 80484eb:	ff d0                	call   *%eax
 80484ed:	8b 03                	mov    (%ebx),%eax
 80484ef:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484f2:	75 f4                	jne    80484e8 <__do_global_ctors_aux+0x18>
 80484f4:	83 c4 04             	add    $0x4,%esp
 80484f7:	5b                   	pop    %ebx
 80484f8:	5d                   	pop    %ebp
 80484f9:	c3                   	ret    
 80484fa:	90                   	nop
 80484fb:	90                   	nop

Disassembly of section .fini:

080484fc <_fini>:
 80484fc:	55                   	push   %ebp
 80484fd:	89 e5                	mov    %esp,%ebp
 80484ff:	53                   	push   %ebx
 8048500:	83 ec 04             	sub    $0x4,%esp
 8048503:	e8 00 00 00 00       	call   8048508 <_fini+0xc>
 8048508:	5b                   	pop    %ebx
 8048509:	81 c3 ec 1a 00 00    	add    $0x1aec,%ebx
 804850f:	e8 4c fe ff ff       	call   8048360 <__do_global_dtors_aux>
 8048514:	59                   	pop    %ecx
 8048515:	5b                   	pop    %ebx
 8048516:	c9                   	leave  
 8048517:	c3                   	ret    
